/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package futoshikiproject;

import Solution.SolveProblem;
import csp.ST;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Hp EliteBook
 */
public class ChooseAlgo extends javax.swing.JFrame {

    /**
     * Creates new form ChooseAlgo
     */
    int dimension;
    JTextField[][]  grille; 
    SolveProblem sc; 
    JPanel grillePn;
    public ChooseAlgo() {
      
        initComponents();
    }
    public ChooseAlgo(int dimension, JTextField [][] grille, SolveProblem sc,JPanel grillePn) {
         initComponents();
         setLocationRelativeTo(null);
        this.dimension = dimension;
        this.grille = grille;
        this.sc = sc;
        this.grillePn = grillePn;
       
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboVariableChoice = new javax.swing.JComboBox<>();
        domainCombo = new javax.swing.JComboBox<>();
        amelCombo = new javax.swing.JComboBox<>();
        chooseBtn = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        comboVariableChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Simple", "Degree", "MRV" }));
        comboVariableChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboVariableChoiceActionPerformed(evt);
            }
        });

        domainCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Simple", "LCV" }));

        amelCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "forward checking", "AC-1" }));

        chooseBtn.setText("OK ");
        chooseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(amelCombo, 0, 138, Short.MAX_VALUE)
                    .addComponent(domainCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboVariableChoice, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(197, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chooseBtn)
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(comboVariableChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(domainCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(amelCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(chooseBtn)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboVariableChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboVariableChoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboVariableChoiceActionPerformed

    private void chooseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseBtnActionPerformed
        // TODO add your handling code here:
        
        ArrayList<String> choice = new ArrayList<>();
        choice.add((String) comboVariableChoice.getSelectedItem());
        choice.add((String) domainCombo.getSelectedItem());
        choice.add((String) amelCombo.getSelectedItem());
         ST<String, String> result=sc.solve(choice); 
                if(result!=null)
        {
            for (int i = 0; i < dimension; i++) // Ligne
         {
             System.out.println("");
             for (int j = 0; j < dimension; j++) // Colonne
             {
                 if (i % 2 == 0 && j % 2 == 0) {
                     //System.out.println("2 pairs : i = " + i + " et j = " + j + "\n ---- val = " + config.get("x"+i+""+j));
                     grille[i * 2][j * 2].setText(result.get("x" + i + "" + j));
                     grille[i * 2][j * 2].setEditable(false);
                 } else if (i % 2 == 0 && j % 2 != 0) {
                     //System.out.println("1 pair, 1 impair : i = " + i + " et j = " + j + "\n ---- val = " + config.get("x"+i+""+j));
                     grille[i * 2][j * 2].setText(result.get("x" + i + "" + j));
                     grille[i * 2][j * 2].setEditable(false);
                 } else if (i % 2 != 0 && j % 2 == 0) {
                     //System.out.println("1 impair, 1 pair : i = " + i + " et j = " + j + "\n ---- val = " + config.get("x"+i+""+j));
                     grille[i * 2][j * 2].setText(result.get("x" + i + "" + j));
                     grille[i * 2][j * 2].setEditable(false);
                 } else if (i % 2 != 0 && j % 2 != 0) {
                     grille[i * 2][j * 2].setText(result.get("x" + i + "" + j));
                     grille[i * 2][j * 2].setEditable(false);
                 }
                System.out.print(result.get("x" + i + "" + j) + " ");
             }
         } 
         grillePn.repaint();
        }else{
        System.out.println("pas de solution");
        }
                dispose();
    }//GEN-LAST:event_chooseBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChooseAlgo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChooseAlgo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChooseAlgo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChooseAlgo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChooseAlgo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> amelCombo;
    private javax.swing.JToggleButton chooseBtn;
    private javax.swing.JComboBox<String> comboVariableChoice;
    private javax.swing.JComboBox<String> domainCombo;
    // End of variables declaration//GEN-END:variables
}
