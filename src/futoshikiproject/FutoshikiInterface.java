/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package futoshikiproject;

import Solution.SolveProblem;
import java.awt.Color;
import java.awt.Font;
import javax.swing.JTextField;

/**
 *
 * @author DAROUYc
 */
public class FutoshikiInterface extends javax.swing.JFrame {

    /**
     * Creates new form FutoshikiInterface
     */
    // --- variables ---
    private int dimension = 0; // Dimension 4x4,5x5,6x6,7x7,8x8
    private int dimGrille = 0; // Dimension containing the variables vertical and horizontal constraints
    private JTextField[][] grille; // Grille containing the variables vertical and horizontal constraints
    private SolveProblem sc ; //new instance for class Solve problem
   //  ArrayList<String> var;
    public FutoshikiInterface() {
        
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grilleScPan = new javax.swing.JScrollPane();
        grillePn = new javax.swing.JPanel();
        choiceCombo = new javax.swing.JComboBox<>();
        cleanBtn = new javax.swing.JButton();
        verifyBtn = new javax.swing.JButton();
        solutionBtn = new javax.swing.JButton();
        Futoshiki = new java.awt.Label();
        startBtn = new javax.swing.JButton();
        comboLevel = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        grilleScPan.setAutoscrolls(true);
        grilleScPan.setPreferredSize(new java.awt.Dimension(300, 300));

        grillePn.setBackground(new java.awt.Color(204, 204, 204));
        grillePn.setPreferredSize(new java.awt.Dimension(650, 650));

        javax.swing.GroupLayout grillePnLayout = new javax.swing.GroupLayout(grillePn);
        grillePn.setLayout(grillePnLayout);
        grillePnLayout.setHorizontalGroup(
            grillePnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );
        grillePnLayout.setVerticalGroup(
            grillePnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );

        grilleScPan.setViewportView(grillePn);

        choiceCombo.setBackground(new java.awt.Color(0, 102, 102));
        choiceCombo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        choiceCombo.setForeground(new java.awt.Color(255, 255, 255));
        choiceCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4x4", "5x5", "6x6", "7x7", "8x8" }));

        cleanBtn.setBackground(new java.awt.Color(153, 153, 0));
        cleanBtn.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        cleanBtn.setForeground(new java.awt.Color(255, 255, 255));
        cleanBtn.setText("Restart");
        cleanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanBtnActionPerformed(evt);
            }
        });

        verifyBtn.setBackground(new java.awt.Color(153, 153, 0));
        verifyBtn.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        verifyBtn.setForeground(new java.awt.Color(255, 255, 255));
        verifyBtn.setText("verify");
        verifyBtn.setEnabled(false);
        verifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyBtnActionPerformed(evt);
            }
        });

        solutionBtn.setBackground(new java.awt.Color(153, 153, 0));
        solutionBtn.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        solutionBtn.setForeground(new java.awt.Color(255, 255, 255));
        solutionBtn.setText("Solution");
        solutionBtn.setEnabled(false);
        solutionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solutionBtnActionPerformed(evt);
            }
        });

        Futoshiki.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        Futoshiki.setForeground(new java.awt.Color(168, 121, 181));
        Futoshiki.setName(""); // NOI18N
        Futoshiki.setText("Futoshiki");

        startBtn.setBackground(new java.awt.Color(204, 51, 0));
        startBtn.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        startBtn.setForeground(new java.awt.Color(255, 255, 255));
        startBtn.setText("start");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        comboLevel.setBackground(new java.awt.Color(0, 102, 102));
        comboLevel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        comboLevel.setForeground(new java.awt.Color(255, 255, 255));
        comboLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Easy", "Normal", "Tricky", " " }));
        comboLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboLevelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(choiceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addComponent(comboLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                .addComponent(Futoshiki, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(159, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cleanBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(solutionBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addComponent(verifyBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(grilleScPan, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Futoshiki, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(grilleScPan, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(choiceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(startBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addComponent(verifyBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addComponent(solutionBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addComponent(cleanBtn)
                        .addContainerGap(73, Short.MAX_VALUE))))
        );

        comboLevel.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cleanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanBtnActionPerformed
        // TODO add your handling code here:
        //clean game by cleaning panel and grille
       initialize();
        
    }//GEN-LAST:event_cleanBtnActionPerformed

    public void initialize()
    {
        int index = choiceCombo.getSelectedIndex(); // get Combobox value   
        
        //get dimension
        switch (index) {
            case 0:
                dimension = 4;
                break;
            case 1:
                dimension = 5;
                break;
            case 2:
                dimension = 6;
                break;
            case 3:
                dimension = 7;
                break;
            case 4:
                dimension = 8;
                break;
            case 5:
                dimension = 9;
                break;
            default:
                break;
        }

        this.dimGrille = 2 * dimension - 1;
        grille = new JTextField[dimGrille][dimGrille];
        
       //clean game by cleaning panel and grille
        grillePn.removeAll();
        grillePn.repaint();
        
        // create JPanel
        switch (dimension) {
            case 4:
                grillePn.setBounds(grillePn.getX(), grillePn.getY(), 265, 265);
                break;
            case 5:
                grillePn.setBounds(grillePn.getX(), grillePn.getY(), 345, 345);
                break;
            case 6:
                grillePn.setBounds(grillePn.getX(), grillePn.getY(), 425, 425);
                break;
            case 7:
                grillePn.setBounds(grillePn.getX(), grillePn.getY(), 505, 505);
                break;
            case 8:
                grillePn.setBounds(grillePn.getX(), grillePn.getY(), 585, 585);
                break;

        }
        
        //fill the JPanel by JTextFields
        for (int i = 0; i < dimGrille; i++) {
            for (int j = 0; j < dimGrille; j++) {
                grille[i][j] = new JTextField();
                grille[i][j].setHorizontalAlignment(JTextField.CENTER);
                grillePn.add(grille[i][j]);
                
                // create JTextField for values 
                if (i % 2 == 0 && j % 2 == 0) {
                    grille[i][j].setBounds(j * 40, i * 40, 50, 50);
                    grille[i][j].setFont(new Font("Bookman Old Style", Font.BOLD, 24));
                } else {
                // create JTextField for constraints
                    grille[i][j].setBounds(j * 40 + 10, i * 40 + 10, 30, 30);
                    grille[i][j].setFont(new Font("", Font.PLAIN, 24));
                    grille[i][j].setBackground(new Color(180,205,219));
                    grille[i][j].setEditable(false);
                }
                // disappear some JTextField
                if (i % 2 != 0 && j % 2 != 0) {
                    grille[i][j].setVisible(false);
                }
            }
        }
            // get level (easy, normal, triky)
            String level=comboLevel.getSelectedItem().toString();
            
            // initialize class SolveProblem
            sc = new SolveProblem(level,grille,dimension);
            
            // get grille containt only the values
            grille = sc.getGrille();
            solutionBtn.setEnabled(true);
            verifyBtn.setEnabled(true);
    }
    private void verifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyBtnActionPerformed
        // TODO add your handling code here:
        
        //verify the contraints if is correct or not
        if(sc.verifyConstraints(grille, dimension))
            System.out.println("Correct");
        else
            System.out.println("!!Not correct");
    }//GEN-LAST:event_verifyBtnActionPerformed

    private void solutionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solutionBtnActionPerformed
        // TODO add your handling code here:
            
            // display JFrame ChooseAlgo for getting algorithms 
            ChooseAlgo choice = new ChooseAlgo( dimension, grille, sc, grillePn);
            choice.setVisible(true);

    }//GEN-LAST:event_solutionBtnActionPerformed

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        // TODO add your handling code here:
      initialize();
    }//GEN-LAST:event_startBtnActionPerformed

    private void comboLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboLevelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FutoshikiInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FutoshikiInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FutoshikiInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FutoshikiInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FutoshikiInterface().setVisible(true);
                

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label Futoshiki;
    private javax.swing.JComboBox<String> choiceCombo;
    private javax.swing.JButton cleanBtn;
    private javax.swing.JComboBox<String> comboLevel;
    private javax.swing.JPanel grillePn;
    private javax.swing.JScrollPane grilleScPan;
    private javax.swing.JButton solutionBtn;
    private javax.swing.JButton startBtn;
    private javax.swing.JButton verifyBtn;
    // End of variables declaration//GEN-END:variables
}
